@model Lascarizador.ViewModels.CardEditViewModel
@{ 
    if (Model.Card.Id == 0) {
        ViewBag.Title = "Novo Cartão";
    } else
    {
        ViewBag.Title = "Edição de Cartão";
    }
}

<h3><b>Cliente:</b> @Model.ClientName</h3>
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Save", "Cards"))
{
    @Html.ValidationSummary(true, "Por favor corrija os seguintes problemas:")

    <div class="container">
        <div class="row">
            <div class="form-group col-lg-3">
                @Html.LabelFor(m => m.Card.CardTypeId, new { @for = "cardTypeId" })
                @Html.DropDownListFor(m => m.Card.CardTypeId, new SelectList(Model.CardTypes, "Id", "Name"), "", new { @class = "form-control form-control-lg", @id = "cardTypeId" })
                @Html.ValidationMessageFor(m => m.Card.CardTypeId)
            </div>
            <div class="form-group col-lg-3">
                @Html.LabelFor(m => m.Card.CardBrandId, new { @for = "cardBrandId" })
                @Html.DropDownListFor(m => m.Card.CardBrandId, new SelectList(Model.CardBrands, "Id", "Name"), "", new { @class = "form-control form-control-lg", @id = "cardBrandId" })
                @Html.ValidationMessageFor(m => m.Card.CardBrandId)
            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-6">
                @Html.LabelFor(m => m.Card.Number, new { @for = "cardNumber" })
                @Html.TextBoxFor(m => m.Card.Number, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Card.Number)
            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-6">
                @Html.LabelFor(m => m.Card.CardHolderName, new { @for = "cardHolderName" })
                @Html.TextBoxFor(m => m.Card.CardHolderName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Card.CardHolderName)
            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-2">
                @Html.LabelFor(t => t.ExpirationMonth, new { @for = "expirationMonth" })
                @Html.DropDownListFor(t => t.ExpirationMonth, new SelectList(Enumerable.Range(1, 12)), new { @class = "form-control form-control-lg", @id = "expirationMonth" })
                @Html.ValidationMessageFor(t => t.ExpirationMonth)
            </div>
            <div class="form-group col-lg-2">
                @Html.LabelFor(t => t.ExpirationYear, new { @for = "expirationYear" })
                @Html.DropDownListFor(t => t.ExpirationYear, new SelectList(Enumerable.Range(2017, 2100)), new { @class = "form-control form-control-lg", @id = "expirationYear" })
                @Html.ValidationMessageFor(t => t.ExpirationYear)
            </div>
            <div class="form-group col-lg-2">
                @Html.LabelFor(m => m.Card.Cvv, new { @for = "cvv" })
                @Html.TextBoxFor(m => m.Card.Cvv, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Card.Cvv)
            </div>
        </div>
        <div class="row">
            <div class="form-group col-lg-2">
                <div class="form-check">
                    <label class="form-check-label">
                        @Html.CheckBoxFor(m => m.Card.HasPassword, new { @class = "form-check-input" })
                        Cartão tem Senha?
                    </label>
                </div>
            </div>
            <div class="form-group col-lg-4">
                @Html.LabelFor(m => m.Card.Password, new { @for = "password" })
                @Html.TextBoxFor(m => m.Card.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Card.Password)
            </div>
        </div>
    </div>
 
    @Html.HiddenFor(m => m.Card.Id)
    @Html.HiddenFor(m => m.Card.ClientId)
    //    @Html.AntiForgeryToken()

    <button type="submit" class="btn btn-primary">Salva Cartão</button>
}
<hr />

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}


